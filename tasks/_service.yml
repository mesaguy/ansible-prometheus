---
- name: Set service facts
  set_fact:
    prometheus_software_port_num: '{{ prometheus_software_instance_port | default(prometheus_software_port, true) }}'
    prometheus_testhost: '{{ prometheus_override_fqdn | default(inventory_hostname) }}'

- name: Verify {{ prometheus_software_name_version }} permissions
  become: true
  file:
    path: '{{ prometheus_software_binary }}'
    mode: 0755
    owner: root
    group: '{{ prometheus_group }}'

- name: Create environment file for {{ prometheus_software_service_name }} service
  become: true
  template:
    dest: '{{ prometheus_etc_dir }}/{{ prometheus_software_service_name }}.env'
    src: templates/daemon-env.j2
    owner: root
    group: '{{ prometheus_group }}'
    mode: 0640
  notify:
    - Restart Prometheus service
  when: prometheus_software_env_vars is defined and prometheus_software_env_vars

- name: Include task to setup {{ prometheus_software_name_version }} {{ ansible_service_mgr }} service
  include_tasks: '_service_mgr_{{ ansible_service_mgr | regex_replace("^(openrc|upstart)$", "init") }}.yml'

- name: Set fact to restart {{ prometheus_software_service_name }} service as part of restarting all
  set_fact:
    # Dummy fact, really just specifies "notify" to restart the service
    prometheus_restart_all: true
  notify:
    - Restart Prometheus service
  when:
    - prometheus_ulimits is defined
    - prometheus_ulimits is changed

- name: Force all notified handlers to run
  meta: flush_handlers

- name: Enable {{ prometheus_software_service_name }} service
  become: true
  service:
    state: started
    enabled: true
    name: '{{ prometheus_software_service_name }}'
  when: prometheus_software_service_test | bool

- name: Include task to setup firewall rules for {{ prometheus_software_name }}
  include_tasks: '_setup_firewall.yml'
  when:
    - (prometheus_manage_client_firewalld | bool or prometheus_manage_client_iptables | bool or prometheus_manage_client_iptables_raw | bool)
    - (prometheus_software_port_num)
    - prometheus_server_ips|length >= 1

- name: Test that {{ prometheus_software_service_name }} {{ inventory_hostname }}:{{ prometheus_software_port_num }} is accessible (software is running)
  wait_for:
    host: '{{ prometheus_software_host | default("0.0.0.0", true) }}'
    port: '{{ prometheus_software_port_num }}'
    connect_timeout: 10
    state: started
    timeout: 45
  when:
    - prometheus_software_service_test | bool
    - (prometheus_software_port_num)

- name: Test {{ prometheus_software_service_name }} {{ prometheus_testhost }}:{{ prometheus_software_port_num }} is reachable from Prometheus servers
  wait_for:
    host: '{{ prometheus_testhost }}'
    port: '{{ prometheus_software_port_num }}'
    connect_timeout: 10
    state: started
    timeout: 45
  delegate_to: '{{ prometheus_server_name }}'
  loop_control:
    loop_var: prometheus_server_name
  with_items: '{{ prometheus_servers | list }}'
  when:
    - prometheus_software_server_side_connect_test | bool
    - (prometheus_software_port_num)
    - prometheus_servers is defined and prometheus_servers | list

- block:
    - name: Set {{ prometheus_software_name_version }} tgroup facts
      set_fact:
        prometheus_client_fqdn: >-
            {% if prometheus_tgroup_use_facts | bool %}{{ ansible_fqdn }}{% else %}{{ prometheus_override_fqdn | default(inventory_hostname) }}{% endif %}
        prometheus_client_hostname: '{% if prometheus_tgroup_use_facts | bool %}{{ ansible_hostname }}{% else %}{{ inventory_hostname_short }}{% endif %}'
        # Needed when in 'gather_facts' mode, some data is still pulled
        # from 'hostvars'
        prometheus_client_inventory_hostname: '{{ inventory_hostname }}'
        prometheus_tgroup_client_mode: true

    - name: Include task to configure {{ prometheus_software_name }} tgroup files on Prometheus servers
      include_tasks: _setup_client_tgroup.yml
  when:
    - prometheus_exporter | bool
    - prometheus_manage_client_tgroups | bool
    - prometheus_servers is defined and prometheus_servers | list
